{"version":3,"file":"static/js/234.e361234c.chunk.js","mappings":"wPACA,EAAmC,kCAAnC,EAAgG,0CAAhG,EAAsK,2CAAtK,EAA6N,2B,SCItN,SAASA,IACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAC9BJ,EAAWI,EAAKC,QACjB,GACF,GAAE,CAACT,KAEJU,EAAAA,EAAAA,kBAAgB,WACdC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,WAEZH,OAAOI,SAAS,CACdF,IAAKG,SAASC,gBAAgBC,aAAe,IAC7CJ,SAAU,UAEb,GAAE,CAACX,KAGF,8BACGA,EAAQgB,OAAS,GAChB,iCACE,mBACA,wBACGhB,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,gBAAIC,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,UAAmD,WACxCJ,MAEX,cAAGG,UAAWC,EAAd,SAAoDH,MAJNC,EADrC,UAWjB,cAAGC,UAAWC,EAAd,SAAgC,sBAIvC,CAED,O,sLCjDMC,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAuB,GAAD,OACxBF,EADwB,sCACcC,GAE5C,CAEM,SAASW,EAAkBC,GAChC,OAAOX,EAAuB,GAAD,OACxBF,EADwB,gCACQC,EADR,kBACyBY,EADzB,8BAG9B,CAEM,SAASC,EAAexC,GAC7B,OAAO4B,EAAuB,GAAD,OACxBF,EADwB,iBACP1B,EADO,oBACY2B,GAE1C,CAEM,SAASc,EAAezC,GAC7B,OAAO4B,EAAuB,GAAD,OACxBF,EADwB,iBACP1B,EADO,4BACoB2B,GAElD,CAEM,SAASrB,EAAkBN,GAChC,OAAO4B,EAAuB,GAAD,OACxBF,EADwB,iBACP1B,EADO,4BACoB2B,GAElD,C,sBCtCD,SAASe,EAAmBC,EAAKC,EAAST,EAAQU,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAhB,EAAOgB,EAET,CAEIF,EAAKG,KACPR,EAAQM,GAERhB,QAAQU,QAAQM,GAAO3C,KAAKsC,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIxB,SAAQ,SAAUU,EAAST,GACpC,IAAIQ,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbR,EAAmBC,EAAKC,EAAST,EAAQU,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdlB,EAAmBC,EAAKC,EAAST,EAAQU,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/movies-api-set.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ReviewsList-item\":\"Reviews_ReviewsList-item__RD9wM\",\"ReviewsList-item--author\":\"Reviews_ReviewsList-item--author__W7hAE\",\"ReviewsList-item--content\":\"Reviews_ReviewsList-item--content__DX+DZ\",\"NoReviews\":\"Reviews_NoReviews__YBZN9\"};","import { useState, useEffect, useLayoutEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/movies-api-set';\nimport styles from './Reviews.module.css';\n\nexport function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(data => {\n      setReviews(data.results);\n    });\n  }, [movieId]);\n\n  useLayoutEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n    window.scrollBy({\n      top: document.documentElement.clientHeight - 160,\n      behavior: 'smooth',\n    });\n  }, [reviews]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <>\n          <hr />\n          <ul>\n            {reviews.map(({ author, content, id }) => (\n              <li className={styles['ReviewsList-item']} key={id}>\n                <h3 className={styles['ReviewsList-item--author']}>\n                  Author: {author}\n                </h3>\n                <p className={styles['ReviewsList-item--content']}>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p className={styles.NoReviews}>No reviews found</p>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '618b949cdf4976e3e0613186bf0f20cf';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieByQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=true`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","data","results","useLayoutEffect","window","scrollTo","top","behavior","scrollBy","document","documentElement","clientHeight","length","map","author","content","id","className","styles","BASE_URL","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieByQuery","query","fetchMovieById","fetchMovieCast","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","error","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}